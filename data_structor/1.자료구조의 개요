1.자료구조의 개요
 다양한 데이터들을 자료라고 부름.
 자료를 효율적으로 관리하는 기법
 자료구조의 종료: 리스트, 트리, 그래프
 저급 프로그래밍 언어 : 하드웨어 중에서도 메모리에 직접 접근할 수 있는 기능을 제공

1-2. 자료와 관리
 자료: 컴퓨터에 저장할 수 있는 모든 값, 모든 정보
 자료형: 컴퓨터에서 저장할 수 있도록 허용하는 형태
 데이터타입: 시스템에서 제공, 사용자가 정의
 자료의 단위: 비트 = 0 또는 1을 기록할 수 있는 최소 단위
           바이트 = 1바이트는 8비트로 구성
           워드 = 한번에 전송하거나 처리하는 단위 4바이트 또는 8바이트 많이 사용
 자료의 구성: 세상의 모든 자료는 문자와 숫자로 구성
 문자 : char
  ASC2 code : 128자까지 표현 가능 7비트 + parity 체크 1비트(정상적으로 통신되는지 확인)
 숫자 : 정수 or 실수
 uni-code: 세상의 모든 문자 다 표현 16비트   
 int(정수) : 4바이트를 사용
 음수 표현: 사인 비트, 1의보수, 2의 보수 이용
 실수표현: float, double
 사용자가 정의하는 자료형 : struct, class
 자료의 관리 : 1.추가 2.제거 3.검색 4.갱신 등
 추가, 제거는 한번만 가능 따라서 검색이 가장 중요
 검색: 1. 주어진 집합에서 임의의 원소를 찾기
      2. 주어진 집합에서 가장 먼저/늦게 온 원소를 찾기
      3. 주어진 집합에서 최대/최소인 원소를 찾기

1-3. 효율적인 기법
기법: 자료를 적절한 구조를 갖도록 조직하고 그에 따른 연산을 제공
구조: 개별적인 자료들이 목적에 적합한 관계를 갖도록 배치된 상태
연산: 자료를 관리하기 위한 작업(추가,제거,검색...)
     구조는 달라도 연산은 동일함->구조에 따른 연산의 구현 방법은 다름
구조: (1)리스트: 한줄로 모아서
     (2)정렬된 리스트: 자료를 정렬하여 자료가 있는 위치를 예측
     (3)큐: 먼저 들어온 순서로 저장
     (4)계층구조: 관계의 일관성을 표현(트리구조)    
     (5)그래프: 시각적표현을 통한 관계의 표현
     (6)추상자료형: 자료와 자료에 대한 연산들을 명기한 개념
추상화: 매우 다양한 형태의 자료가 존재. 각 자료들의 개별적인 속성을     제거하고 공통된 속성을 추출하고, 공통된 연산을 적용시킴
효율: 어떤 성과를 얻기 위해 얼마나 많은 자원을 투입하였는지 측정(성능)
    최선의 경우
    평균의 경우
    최악의 경우 자료 구조에서의 성능은 최악의 경우에 대한 성능임
컴퓨터의 자원: (1)시간->cpu (2)공간->메모리
 
